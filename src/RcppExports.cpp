// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// LL_spARCH
double LL_spARCH(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_spARCH(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_spARCH(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_EspARCH
double LL_EspARCH(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_EspARCH(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_EspARCH(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_spARCHX
double LL_spARCHX(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_spARCHX(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_spARCHX(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_EspARCHX
double LL_EspARCHX(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_EspARCHX(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_EspARCHX(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_SARspARCH
double LL_SARspARCH(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_SARspARCH(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_SARspARCH(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_SAREspARCH
double LL_SAREspARCH(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_SAREspARCH(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_SAREspARCH(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_SARspARCHX
double LL_SARspARCHX(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_SARspARCHX(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_SARspARCHX(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// LL_SAREspARCHX
double LL_SAREspARCHX(Eigen::VectorXd pars, List param);
RcppExport SEXP _spGARCH_LL_SAREspARCHX(SEXP parsSEXP, SEXP paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< List >::type param(paramSEXP);
    rcpp_result_gen = Rcpp::wrap(LL_SAREspARCHX(pars, param));
    return rcpp_result_gen;
END_RCPP
}
// Simulation_CPP
Eigen::VectorXd Simulation_CPP(Eigen::VectorXd eps, Eigen::MappedSparseMatrix<double> Wsparse, double alpha);
RcppExport SEXP _spGARCH_Simulation_CPP(SEXP epsSEXP, SEXP WsparseSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< Eigen::MappedSparseMatrix<double> >::type Wsparse(WsparseSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(Simulation_CPP(eps, Wsparse, alpha));
    return rcpp_result_gen;
END_RCPP
}
// Simulation_CPP_E
Eigen::VectorXd Simulation_CPP_E(Eigen::ArrayXd eps, Eigen::MappedSparseMatrix<double> Wsparse, double alpha, double b);
RcppExport SEXP _spGARCH_Simulation_CPP_E(SEXP epsSEXP, SEXP WsparseSEXP, SEXP alphaSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::ArrayXd >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< Eigen::MappedSparseMatrix<double> >::type Wsparse(WsparseSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(Simulation_CPP_E(eps, Wsparse, alpha, b));
    return rcpp_result_gen;
END_RCPP
}
// asdgCMatrix
SEXP asdgCMatrix(SEXP IN);
RcppExport SEXP _spGARCH_asdgCMatrix(SEXP INSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type IN(INSEXP);
    rcpp_result_gen = Rcpp::wrap(asdgCMatrix(IN));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spGARCH_LL_spARCH", (DL_FUNC) &_spGARCH_LL_spARCH, 2},
    {"_spGARCH_LL_EspARCH", (DL_FUNC) &_spGARCH_LL_EspARCH, 2},
    {"_spGARCH_LL_spARCHX", (DL_FUNC) &_spGARCH_LL_spARCHX, 2},
    {"_spGARCH_LL_EspARCHX", (DL_FUNC) &_spGARCH_LL_EspARCHX, 2},
    {"_spGARCH_LL_SARspARCH", (DL_FUNC) &_spGARCH_LL_SARspARCH, 2},
    {"_spGARCH_LL_SAREspARCH", (DL_FUNC) &_spGARCH_LL_SAREspARCH, 2},
    {"_spGARCH_LL_SARspARCHX", (DL_FUNC) &_spGARCH_LL_SARspARCHX, 2},
    {"_spGARCH_LL_SAREspARCHX", (DL_FUNC) &_spGARCH_LL_SAREspARCHX, 2},
    {"_spGARCH_Simulation_CPP", (DL_FUNC) &_spGARCH_Simulation_CPP, 3},
    {"_spGARCH_Simulation_CPP_E", (DL_FUNC) &_spGARCH_Simulation_CPP_E, 4},
    {"_spGARCH_asdgCMatrix", (DL_FUNC) &_spGARCH_asdgCMatrix, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_spGARCH(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
